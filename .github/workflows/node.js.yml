# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI
on: [push, pull_request]

env:
  NODE_VERSION: 16.x
  WIN_CD_VERSION: "88.0.4324.96"

jobs:
  unit_tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - run: npm install
    - run: npm run lint
    - run: npm run test

  e2e_tests:
    needs: [unit_tests]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - run: |
        export CHROME_VERSION=$(google-chrome --version | python -c "import sys, re; print(re.search(r'[0-9.]+', sys.stdin.read()).group(0))")
        echo "Version number of the installed Chrome browser: $CHROME_VERSION"
        export MAJOR_CHROME_VERSION=$(python -c "print('.'.join('$CHROME_VERSION'.split('.')[:-1]))")
        echo "Major part of the version number: $MAJOR_CHROME_VERSION"
        if grep -q "$MAJOR_CHROME_VERSION" config/mapping.json; then
          export CHROMEDRIVER_VERSION=$(grep -m 1 -n "$MAJOR_CHROME_VERSION" config/mapping.json | cut -d' ' -f4 | tr -d ',"')
          echo "Matching Chromedriver version: $CHROMEDRIVER_VERSION"
        fi
    - run: |
        npm install
        npm run build
    - run: |
        export DISPLAY=:99
        export _FORCE_LOGS=1
        sudo Xvfb -ac $DISPLAY -screen 0 1280x1024x24 > /dev/null 2>&1 &
        npm run e2e-test

  windows_tests:
    needs: [unit_tests]
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - run: npm install --chromedriver_version=${{ env.WIN_CD_VERSION }}
